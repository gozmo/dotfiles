execute pathogen#infect()

let mapleader=" "

" Show a red column and linewidth 120
if exists('+colorcolumn') | set colorcolumn=120 | endif

" F-key mappings
nmap <silent> <F2> :NERDTreeToggle<CR>
nmap <silent> <F3> :MBEToggle<CR>
nnoremap <F4> :UndotreeToggle<cr>
nmap <F5> :TagbarToggle<CR>
nmap <F12> :sp ~/.vim/useful_bindings.txt<cr>

"Search for selected text, forwards or backwards.
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R><C-R>=substitute(
  \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>

filetype plugin indent on
syntax on
set autoread
set background=dark
set encoding=utf-8
set hlsearch
set ignorecase
set noequalalways
set nowrap
set number
set showmatch
set t_Co=256
set textwidth=120
set ttyfast
set wrapmargin=0
setglobal fileencoding=utf-8

set wildignore=*.json,*.jpg,*.csv

"Tab settings
set tabstop=4
set shiftwidth=4
set expandtab
set softtabstop=4

colorscheme blackboard

if has('gui_running')
  set guifont=Monospace
endif



""""""""""""""""""
" Plugin configs "
""""""""""""""""""

" Ack
:nnoremap <Leader>a :Ack 

" Nerdtree config
let g:NERDTreeWinSize=31 "This doesn't work on some systems

"Minibuf config
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1

"Airline config
set laststatus=2
let g:airline_powerline_fonts = 1

"Semantic highlight
:nnoremap <Leader>s :SemanticHighlightToggle<cr>
let s:semanticGUIColors = [ '#72d572', '#c5e1a5', '#e6ee9c', '#fff59d', '#ffe082', '#ffcc80', '#ffab91', '#bcaaa4', '#b0bec5', '#ffa726', '#ff8a65', '#f9bdbb', '#f9bdbb', '#f8bbd0', '#e1bee7', '#d1c4e9', '#ffe0b2', '#c5cae9', '#d0d9ff', '#b3e5fc', '#b2ebf2', '#b2dfdb', '#a3e9a4', '#dcedc8' , '#f0f4c3', '#ffb74d' ]

set wildignore+=*.png,*.jpg,*.jpeg,*/build/*,*.pyc,*.log,*/log/*,*/logs/*,*.log.*,*.class
let g:miniBufExplVSplit = 30

"Fugitive config
set diffopt+=vertical

"CtrlP config

"root dir is nearest ancestor with .git in it
let g:ctrlp_working_path_mode = 'r'

"Undotree config
if has("persistent_undo")
    set undodir=~/.undodir/
    set undofile
endif

if !exists('g:undotree_WindowLayout')
    let g:undotree_WindowLayout = 1
endif

" undotree window width
if !exists('g:undotree_SplitWidth')
    if exists('g:undotree_ShortIndicators')
        let g:undotree_SplitWidth = 24
    else
        let g:undotree_SplitWidth = 30
    endif
endif

" diff window height
if !exists('g:undotree_DiffpanelHeight')
    let g:undotree_DiffpanelHeight = 10
endif

" if set, let undotree window get focus after being opened, otherwise
" focus will stay in current window.
if !exists('g:undotree_SetFocusWhenToggle')
    let g:undotree_SetFocusWhenToggle = 0
endif

" relative timestamp
if !exists('g:undotree_RelativeTimestamp')
    let g:undotree_RelativeTimestamp = 1
endif

" Highlight changed text
if !exists('g:undotree_HighlightChangedText')
    let g:undotree_HighlightChangedText = 1
endif


" If installed using git
set rtp+=~/.fzf

for n in range(1, 9)
  exe "nnoremap <silent> <M-".n."> :".n."wincmd w<CR>"
endfor

